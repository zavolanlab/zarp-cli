name: ci

on: [push, pull_request]

jobs:

  static-code-analysis:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install dev dependencies
        run: pip install -r requirements_dev.txt

      - name: Run Flake8
        run: flake8

      - name: Run Pylint
        run: pylint --rcfile pylint.cfg setup.py zarp/

      - name: Run Mypy
        run: mypy zarp

  unit-testing:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]

    name: Python ${{ matrix.python-version }}

    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install dev dependencies
        run: pip install -r requirements_dev.txt

      - name: Test code coverage
        run: |
          coverage run --source zarp -m pytest
          coverage xml

      - name: Submit Report to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  integration-testing:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]

    name: Python ${{ matrix.python-version }}

    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install dev dependencies
        run: pip install -r requirements_dev.txt

      - name: Install ZARP-CLI
        run: python setup.py install

      - name: Run integration test
        run: zarp --help

  publish-debug:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install dev dependencies
        run: pip install -r requirements_dev.txt

      - name: Publish the package (DEBUG mode)
        run: |
          git config --global user.name "semantic-release (via GH Actions)"
          git config --global user.email "semantic-release@actions"
          semantic-release publish -v DEBUG
